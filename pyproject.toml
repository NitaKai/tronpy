[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "tronpy"
dynamic = ["version"]
description = "TRON Python client library"
authors = [{ name = "andelf", email = "andelf@gmail.com" }]
license = "MIT"
readme = "README.md"
requires-python = ">=3.8"
keywords = ["tron", "api", "blockchain"]
classifiers = [
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Natural Language :: English",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "base58",
    "coincurve",
    "eth-abi>=5.0.0,<6.0.0",
    "httpx",
    "pycryptodome<4",
    "requests",
]

[project.optional-dependencies]
mnemonic = ["mnemonic==0.20"]
offline = ["protobuf"]

[project.urls]
Homepage = "https://github.com/andelf/tronpy"
Repository = "https://github.com/andelf/tronpy"
Documentation = "https://tronpy.readthedocs.io"

[dependency-groups]
dev = [
    "pytest",
    "pytest-cov",
    "pytest-asyncio",
    "flake8",
    "black",
    "isort",
    "mypy",
    "codecov",
    "pre-commit",
    "freezegun",
]
docs = ["sphinx"]

[tool.hatch.version]
path = "tronpy/version.py"

[tool.hatch.build.targets.wheel]
packages = ["tronpy"]

[tool.pytest.ini_options]
addopts = ["--cov=.", "--cov-report", "term-missing"]
filterwarnings = [
    "error::DeprecationWarning",
    "error::PendingDeprecationWarning",
]

[tool.black]
line-length = 127

[tool.isort]
profile = "black"
line_length = 127

[tool.mypy]
warn_redundant_casts = true
warn_unused_ignores = true
disallow_untyped_calls = true
disallow_untyped_defs = true
check_untyped_defs = true
warn_return_any = true
no_implicit_optional = true
strict_optional = true
ignore_missing_imports = true

[tool.coverage.run]
omit = ["*__init__.py", "tests/*", "venv/*", "env/*", "setup.py"]
